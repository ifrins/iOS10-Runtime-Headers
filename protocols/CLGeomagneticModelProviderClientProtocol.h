/* Generated by RuntimeBrowser.
 */

@protocol CLGeomagneticModelProviderClientProtocol <CLNotifierServiceProtocol>

@required

- (void)doAsync:(void *)arg1; // needs 1 arg types, found 7: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, struct CLGeomagneticModelProviderClient { int (**x1)(); struct BasicMutex { int (**x_2_1_1)(); struct MutexInfo {} *x_2_1_2; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; id x4; struct map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > > { struct __tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > > { struct __tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_5_1_1; } x5; struct map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > > { struct __tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > > { struct __tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_6_1_1; } x6; int x7; bool x8; struct CLConnectionClient {} *x9; id x10; void*x11; void*x12; void*x13; void*x14; out void*x15; const void*x16; unsigned char x17; void*x18; void*x19; void*x20; long x21; void*x22; long x23; void*x24; unsigned int x25; void*x26; long doublex27; void*x28; SEL x29; void*x30; union x31; void*x32; long x33; void*x34; out void*x35; in void*x36; void*x37; void*x38; void*x39; void*x40; long x41; void*x42; out void*x43; in void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; const void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; float x61; const void*x62; void*x63; void*x64; void*x65; out const void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; id x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; id x83; void*x84; void*x85; void*x86; void*x87; void*x88; void* x89[ /* ? */ ]; void*x90; void*x91; void*x92; void*x93; void*x94; id x95; id x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; id x103; void*x104; void*x105; void*x106; void*x107; id x108; id x109; void*x110; void*x111; void*x112; void*x113; void*x114; long long x115; id x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; id x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; id x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; id x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; id x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; id x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; id x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; id x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; id x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; id x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; id x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; id x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; id x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; id x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; id x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; id x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; id x228; void*x229; void*x230; void*x231; void*x232; union x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; id x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; id x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; id x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; id x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; id x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; id x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; id x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; id x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; id x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; id x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; id x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; id x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; id x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; id x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; id x339; void*x340; void*x341; void*x342; void*x343; union x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; id x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; id x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; id x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; id x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; id x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; id x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; id x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; id x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; id x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; id x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; id x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; id x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; id x436; void*x437; void*x438; void*x439; void*x440; double x441; void*x442; id x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; id x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; id x457; void*x458; void*x459; void*x460; void*x461; long x462; void*x463; id x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; id x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; id x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; id x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; id x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; id x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; id x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; id x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; id x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; id x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; id x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; id x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; id x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; id x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; id x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; id x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; id x576; void*x577; void*x578; void*x579; void*x580; long doublex581; void*x582; id x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; id x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; id x597; void*x598; void*x599; void*x600; void*x601; unsigned long x602; void*x603; id x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; id x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; id x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; id x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; id x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; id x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; id x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; id x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; id x660; void*x661; void*x662; void*x663; void*x664; double x665; void*x666; id x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; id x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; id x681; void*x682; void*x683; void*x684; void*x685; long x686; void*x687; id x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; id x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; id x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; id x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; id x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; id x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; id x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; id x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; id x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; id x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; id x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; id x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; id x772; void*x773; void*x774; void*x775; void*x776; const void*x777; id x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; id x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; id x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; id x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; id x806; void*x807; void*x808; void*x809; void*x810; inout void*x811; id x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; id x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; id x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; id x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; id x840; void*x841; void*x842; void*x843; void*x844; char *x845; void*x846; id x847; void*x848; void*x849; void*x850; void*x851; oneway void*x852; id x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; id x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; id x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; id x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; id x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; id x888; void*x889; void*x890; void*x891; void*x892; void**x893; id x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; id x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; id x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; id x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; id x922; void*x923; void*x924; void*x925; void*x926; SEL x927; void*x928; id x929; void*x930; void*x931; void*x932; void*x933; float x934; void*x935; id x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; id x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; id x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; id x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; id x964; void*x965; void*x966; void*x967; void*x968; bool x969; void*x970; id x971; void*x972; void*x973; void*x974; void*x975; in void*x976; id x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; id x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; id x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; id x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; id x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; id x1012; void*x1013; void*x1014; void*x1015; void*x1016; void x1017; void*x1018; id x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; id x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; id x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; id x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; id x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; id x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; id x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; id x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; id x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; id x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; id x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; id x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; id x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; id x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; id x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; id x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; id x1131; void*x1132; void*x1133; void*x1134; void*x1135; unsigned int x1136/* : ? */; void*x1137; id x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; id x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; id x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; id x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; id x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; id x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; id x1180; void*x1181; void*x1182; void*x1183; void*x1184; void*x1185; void*x1186; id x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; id x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; id x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; id x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; id x1215; void*x1216; void*x1217; void*x1218; void*x1219; const void*x1220; id x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; id x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; id x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; id x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; id x1249; void*x1250; void*x1251; void*x1252; void*x1253; inout void*x1254; id x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; id x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; id x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; id x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; id x1283; void*x1284; void*x1285; void*x1286; void*x1287; char *x1288; void*x1289; id x1290; void*x1291; void*x1292; void*x1293; void*x1294; oneway void*x1295; id x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; void*x1302; id x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; id x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; id x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; id x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; id x1331; void*x1332; void*x1333; void*x1334; void*x1335; void**x1336; id x1337; void*x1338; void*x1339; void*x1340; void*x1341; void*x1342; void*x1343; id x1344; void*x1345; void*x1346; void*x1347; void*x1348; void*x1349; void*x1350; id x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; id x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; id x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; id x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; id x1379; void*x1380; void*x1381; void*x1382; void*x1383; unsigned int x1384; void*x1385; id x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; id x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; id x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; id x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; id x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; id x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; void*x1427; id x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; id x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; id x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; id x1449; void*x1450; void*x1451; void*x1452; void*x1453; char *x1454; void*x1455; id x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; id x1463; void*x1464; void*x1465; void*x1466; void*x1467; unsigned long long x1468; void*x1469; id x1470; void*x1471; void*x1472; void*x1473; void*x1474; void*x1475; void*x1476; id x1477; void*x1478; void*x1479; void*x1480; void*x1481; }*, void*, id
- (void)doAsync:(void *)arg1 withReply:(void *)arg2; // needs 2 arg types, found 5: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, struct CLGeomagneticModelProviderClient { int (**x1)(); struct BasicMutex { int (**x_2_1_1)(); struct MutexInfo {} *x_2_1_2; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; id x4; struct map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > > { struct __tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > > { struct __tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_5_1_1; } x5; struct map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > > { struct __tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > > { struct __tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_6_1_1; } x6; int x7; bool x8; struct CLConnectionClient {} *x9; id x10; void*x11; void*x12; void*x13; id /* block */ x14; void*x15; void x16; id /* block */ x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; unsigned long x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; in void*x105; out void*x106; double x107; void*x108; void*x109; void*x110; void*x111; void*x112; short x113; void*x114; void*x115; void*x116; double x117; void*x118; SEL x119; void*x120; SEL x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; SEL x129; void*x130; SEL x131; void*x132; void*x133; void*x134; void*x135; void*x136; void x137; void*x138; void*x139; void*x140; long x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; int x159; void*x160; in void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; unsigned char x168; void*x169; unsigned long x170; void*x171; inout void*x172; out void*x173; void*x174; void*x175; int x176; void*x177; float x178; void*x179; int x180; void*x181; void*x182; void*x183; const void*x184; void*x185; void*x186; unsigned char x187; void*x188; unsigned long x189; void*x190; unsigned char x191; void*x192; out void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; short x200; void*x201; short x202; void*x203; long doublex204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; unsigned int x212/* : ? */; void*x213; void*x214; void*x215; short x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; SEL x230; void*x231; SEL x232; void*x233; inout void*x234; out void*x235; void*x236; void*x237; int x238; void*x239; float x240; void*x241; int x242; void*x243; BOOL x244; void*x245; void*x246; void*x247; void*x248; void*x249; int x250; void*x251; out void*x252; in void*x253; void*x254; void*x255; void*x256; void*x257; unsigned char x258; void*x259; unsigned long x260; void*x261; unsigned char x262; void*x263; out void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; short x271; void*x272; short x273; void*x274; long doublex275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; unsigned int x283/* : ? */; void*x284; void*x285; void*x286; short x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; SEL x301; void*x302; SEL x303; void*x304; inout void*x305; out void*x306; void*x307; void*x308; int x309; void*x310; float x311; void*x312; int x313; void*x314; BOOL x315; void*x316; void*x317; void*x318; void*x319; void*x320; int x321; void*x322; out void*x323; in void*x324; long doublex325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; BOOL x337; void*x338; void*x339; void*x340; void*x341; void*x342; const void*x343; void*x344; void*x345; void*x346; void*x347; BOOL x348; void*x349; void*x350; void*x351; void*x352; void*x353; const void*x354; void*x355; void*x356; SEL x357; void*x358; SEL x359; void*x360; unsigned char x361; void*x362; long x363; void*x364; int x365; void*x366; void*x367; void*x368; in void*x369; void*x370; void*x371; inout void*x372; out void*x373; void*x374; void*x375; int x376; void*x377; float x378; void*x379; int x380; void*x381; BOOL x382; void*x383; void*x384; void*x385; void*x386; void*x387; int x388; void*x389; out void*x390; in void*x391; short x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void x400; void*x401; out void*x402; int x403; void*x404; double x405; void*x406; void*x407; void*x408; char *x409; void*x410; void*x411; void*x412; void*x413; void*x414; struct x415; void*x416; }*
- (bool)syncgetDoSync:(void *)arg1; // needs 1 arg types, found 5: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, struct CLGeomagneticModelProviderClient { int (**x1)(); struct BasicMutex { int (**x_2_1_1)(); struct MutexInfo {} *x_2_1_2; } x2; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_3_1_1; } x3; id x4; struct map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > > { struct __tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification> > > { struct __tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::Notification>, std::__1::less<int>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_5_1_1; } x5; struct map<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > > { struct __tree<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications> > > { struct __tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CLNotifier<CLGeomagneticModelProvider_Type::Notification, CLGeomagneticModelProvider_Type::NotificationData, char, char>::ClientNotifications>, std::__1::less<int>, true> > { unsigned long long x_3_3_1; } x_1_2_3; } x_6_1_1; } x6; int x7; bool x8; struct CLConnectionClient {} *x9; id x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; unsigned char x17; void*x18; unsigned long x19; void*x20; void*x21; void*x22; void*x23; void*x24; out void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; in void*x32; void*x33; void*x34; void*x35; void*x36; int x37; void*x38; BOOL x39; void*x40; void*x41; void*x42; out void*x43; double x44; void*x45; void*x46; void*x47; long x48; void*x49; void*x50; void*x51; const void*x52; out void*x53; void x54; void*x55; int x56; void*x57; double x58; void*x59; void*x60; void*x61; const void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; const void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; short x86; void*x87; void*x88; void*x89; double x90; void*x91; SEL x92; void*x93; SEL x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; SEL x102; void*x103; SEL x104; void*x105; void*x106; void*x107; void*x108; void*x109; void x110; void*x111; void*x112; void*x113; long x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; int x132; void*x133; in void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; unsigned char x141; void*x142; unsigned long x143; void*x144; inout void*x145; out void*x146; void*x147; void*x148; int x149; void*x150; float x151; void*x152; int x153; void*x154; void*x155; void*x156; const void*x157; void*x158; void*x159; unsigned char x160; void*x161; unsigned long x162; void*x163; void*x164; void*x165; void*x166; void*x167; out void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; in void*x175; void*x176; void*x177; void*x178; void*x179; int x180; void*x181; BOOL x182; void*x183; void*x184; void*x185; out void*x186; double x187; void*x188; void*x189; void*x190; long x191; void*x192; void*x193; void*x194; const void*x195; out void*x196; void x197; void*x198; int x199; void*x200; double x201; void*x202; void*x203; void*x204; const void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; SEL x216; void*x217; SEL x218; void*x219; inout void*x220; out void*x221; void*x222; void*x223; int x224; void*x225; float x226; void*x227; int x228; void*x229; BOOL x230; void*x231; void*x232; void*x233; void*x234; void*x235; int x236; void*x237; out void*x238; in void*x239; void*x240; void*x241; void*x242; void*x243; unsigned char x244; void*x245; unsigned long x246; void*x247; void*x248; void*x249; void*x250; void*x251; out void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; in void*x259; void*x260; void*x261; void*x262; void*x263; int x264; void*x265; BOOL x266; void*x267; void*x268; void*x269; out void*x270; double x271; void*x272; void*x273; void*x274; long x275; void*x276; void*x277; void*x278; const void*x279; out void*x280; void x281; void*x282; int x283; void*x284; double x285; void*x286; void*x287; void*x288; const void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; SEL x300; void*x301; SEL x302; void*x303; inout void*x304; out void*x305; void*x306; void*x307; int x308; void*x309; float x310; void*x311; int x312; void*x313; BOOL x314; void*x315; void*x316; void*x317; void*x318; void*x319; int x320; void*x321; out void*x322; in void*x323; long doublex324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; BOOL x336; void*x337; void*x338; void*x339; void*x340; void*x341; const void*x342; void*x343; void*x344; void*x345; void*x346; BOOL x347; void*x348; void*x349; void*x350; void*x351; void*x352; const void*x353; void*x354; void*x355; SEL x356; void*x357; SEL x358; void*x359; inout void*x360; out void*x361; void*x362; void*x363; int x364; void*x365; float x366; void*x367; int x368; void*x369; BOOL x370; void*x371; void*x372; void*x373; void*x374; void*x375; int x376; void*x377; out void*x378; in void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; short x386; void*x387; void*x388; void*x389; double x390; void*x391; SEL x392; void*x393; SEL x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; SEL x402; void*x403; SEL x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void x418; void*x419; void*x420; void*x421; long x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; BOOL x430; void*x431; out void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; const void*x439; void*x440; void*x441; void*x442; void*x443; int x444; void*x445; in void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; short x453; void*x454; void*x455; void*x456; double x457; void*x458; SEL x459; void*x460; SEL x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; SEL x469; void*x470; SEL x471; void*x472; void*x473; void*x474; void*x475; void*x476; void x477; void*x478; void*x479; void*x480; long x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; int x499; void*x500; in void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; unsigned char x508; void*x509; unsigned long x510; void*x511; inout void*x512; out void*x513; void*x514; void*x515; int x516; void*x517; float x518; void*x519; int x520; void*x521; void*x522; void*x523; const void*x524; void*x525; void*x526; unsigned char x527; void*x528; unsigned long x529; void*x530; void*x531; void*x532; void*x533; void*x534; out void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; in void*x542; void*x543; void*x544; void*x545; void*x546; int x547; void*x548; BOOL x549; void*x550; void*x551; void*x552; out void*x553; double x554; void*x555; void*x556; void*x557; long x558; void*x559; void*x560; void*x561; const void*x562; out void*x563; void x564; void*x565; int x566; void*x567; double x568; void*x569; void*x570; void*x571; const void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; SEL x583; void*x584; SEL x585; void*x586; inout void*x587; out void*x588; void*x589; void*x590; int x591; void*x592; float x593; void*x594; int x595; void*x596; BOOL x597; void*x598; void*x599; void*x600; void*x601; void*x602; int x603; void*x604; out void*x605; in void*x606; void*x607; void*x608; void*x609; void*x610; unsigned char x611; void*x612; unsigned long x613; void*x614; void*x615; void*x616; void*x617; void*x618; out void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; in void*x626; void*x627; void*x628; void*x629; void*x630; int x631; void*x632; BOOL x633; void*x634; void*x635; void*x636; out void*x637; double x638; void*x639; void*x640; void*x641; long x642; void*x643; void*x644; void*x645; const void*x646; out void*x647; void x648; void*x649; int x650; void*x651; double x652; void*x653; void*x654; void*x655; const void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; SEL x667; void*x668; SEL x669; void*x670; inout void*x671; out void*x672; void*x673; void*x674; int x675; void*x676; float x677; void*x678; int x679; void*x680; BOOL x681; void*x682; void*x683; void*x684; void*x685; void*x686; int x687; void*x688; out void*x689; in void*x690; long doublex691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; BOOL x703; void*x704; void*x705; void*x706; void*x707; void*x708; const void*x709; void*x710; void*x711; void*x712; void*x713; BOOL x714; void*x715; void*x716; void*x717; void*x718; void*x719; const void*x720; void*x721; void*x722; SEL x723; void*x724; SEL x725; void*x726; inout void*x727; out void*x728; void*x729; void*x730; int x731; void*x732; float x733; void*x734; int x735; void*x736; BOOL x737; void*x738; void*x739; void*x740; void*x741; void*x742; int x743; void*x744; out void*x745; in void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; short x753; void*x754; void*x755; void*x756; double x757; void*x758; SEL x759; void*x760; SEL x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; SEL x769; void*x770; SEL x771; void*x772; long x773; void*x774; void*x775; void*x776; short x777; void*x778; short x779; void*x780; void*x781; void*x782; int x783; void*x784; in void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; const void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; short x807; void*x808; void*x809; void*x810; double x811; void*x812; SEL x813; void*x814; SEL x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; SEL x823; void*x824; SEL x825; void*x826; void*x827; void*x828; long x829; void*x830; long x831; void*x832; out void*x833; BOOL x834; void*x835; void*x836; void*x837; void*x838; void*x839; out void*x840; const void*x841; void*x842; void*x843; short x844; void*x845; void*x846; void*x847; double x848; void*x849; SEL x850; void*x851; SEL x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; SEL x860; void*x861; SEL x862; void*x863; void*x864; void*x865; void*x866; void*x867; void x868; void*x869; void*x870; void*x871; long x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; int x890; void*x891; in void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; unsigned char x899; void*x900; unsigned long x901; void*x902; inout void*x903; out void*x904; void*x905; void*x906; int x907; void*x908; float x909; void*x910; int x911; void*x912; void*x913; void*x914; const void*x915; void*x916; void*x917; unsigned char x918; void*x919; unsigned long x920; void*x921; void*x922; void*x923; void*x924; void*x925; out void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; in void*x933; void*x934; void*x935; void*x936; void*x937; int x938; void*x939; BOOL x940; void*x941; void*x942; void*x943; out void*x944; double x945; void*x946; void*x947; void*x948; long x949; void*x950; void*x951; void*x952; const void*x953; out void*x954; void x955; void*x956; int x957; void*x958; double x959; void*x960; void*x961; void*x962; const void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; SEL x974; void*x975; SEL x976; void*x977; inout void*x978; out void*x979; void*x980; void*x981; int x982; void*x983; float x984; void*x985; int x986; void*x987; BOOL x988; void*x989; void*x990; void*x991; void*x992; void*x993; int x994; void*x995; out void*x996; in void*x997; void*x998; void*x999; void*x1000; void*x1001; unsigned char x1002; void*x1003; unsigned long x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; out void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; in void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; int x1022; void*x1023; BOOL x1024; void*x1025; void*x1026; void*x1027; out void*x1028; double x1029; void*x1030; void*x1031; void*x1032; long x1033; void*x1034; void*x1035; void*x1036; const void*x1037; out void*x1038; void x1039; void*x1040; int x1041; void*x1042; double x1043; void*x1044; void*x1045; void*x1046; const void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; SEL x1058; void*x1059; SEL x1060; void*x1061; inout void*x1062; out void*x1063; void*x1064; void*x1065; int x1066; void*x1067; float x1068; void*x1069; int x1070; void*x1071; BOOL x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; int x1078; void*x1079; out void*x1080; in void*x1081; long doublex1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; BOOL x1094; void*x1095; void*x1096; void*x1097; void*x1098; void*x1099; const void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; BOOL x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; const void*x1111; void*x1112; void*x1113; SEL x1114; void*x1115; SEL x1116; void*x1117; inout void*x1118; out void*x1119; void*x1120; void*x1121; int x1122; void*x1123; float x1124; void*x1125; int x1126; void*x1127; BOOL x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; int x1134; void*x1135; out void*x1136; in void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; struct x1150; void*x1151; void*x1152; void*x1153; short x1154; void*x1155; void*x1156; void*x1157; const void*x1158; void*x1159; void*x1160; BOOL x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; const void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; in void*x1180; out void*x1181; double x1182; void*x1183; void*x1184; void*x1185; void*x1186; void*x1187; short x1188; void*x1189; void*x1190; void*x1191; double x1192; void*x1193; SEL x1194; void*x1195; SEL x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; SEL x1204; void*x1205; SEL x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void x1212; void*x1213; void*x1214; void*x1215; long x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; int x1234; void*x1235; in void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; unsigned char x1243; void*x1244; unsigned long x1245; void*x1246; inout void*x1247; out void*x1248; void*x1249; void*x1250; int x1251; void*x1252; float x1253; void*x1254; int x1255; void*x1256; void*x1257; void*x1258; const void*x1259; void*x1260; void*x1261; unsigned char x1262; void*x1263; unsigned long x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; out void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; in void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; int x1282; void*x1283; BOOL x1284; void*x1285; void*x1286; void*x1287; out void*x1288; double x1289; void*x1290; void*x1291; void*x1292; long x1293; void*x1294; void*x1295; void*x1296; const void*x1297; out void*x1298; void x1299; void*x1300; int x1301; void*x1302; double x1303; void*x1304; void*x1305; void*x1306; const void*x1307; void*x1308; void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; void*x1316; void*x1317; SEL x1318; void*x1319; SEL x1320; void*x1321; inout void*x1322; out void*x1323; void*x1324; void*x1325; int x1326; void*x1327; float x1328; void*x1329; int x1330; void*x1331; BOOL x1332; void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; int x1338; void*x1339; out void*x1340; in void*x1341; void*x1342; void*x1343; void*x1344; void*x1345; unsigned char x1346; void*x1347; unsigned long x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; out void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; in void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; int x1366; void*x1367; BOOL x1368; void*x1369; void*x1370; void*x1371; out void*x1372; double x1373; void*x1374; void*x1375; void*x1376; long x1377; void*x1378; void*x1379; void*x1380; const void*x1381; out void*x1382; void x1383; void*x1384; int x1385; void*x1386; double x1387; void*x1388; void*x1389; void*x1390; const void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; SEL x1402; void*x1403; SEL x1404; void*x1405; inout void*x1406; out void*x1407; void*x1408; void*x1409; int x1410; void*x1411; float x1412; void*x1413; int x1414; void*x1415; BOOL x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; int x1422; void*x1423; out void*x1424; in void*x1425; long doublex1426; void*x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; void*x1434; void*x1435; void*x1436; void*x1437; BOOL x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; const void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; BOOL x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; const void*x1455; void*x1456; void*x1457; SEL x1458; void*x1459; SEL x1460; void*x1461; inout void*x1462; out void*x1463; void*x1464; void*x1465; int x1466; void*x1467; float x1468; void*x1469; int x1470; void*x1471; BOOL x1472; void*x1473; void*x1474; void*x1475; void*x1476; void*x1477; int x1478; void*x1479; out void*x1480; in void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void x1488; void*x1489; out void*x1490; int x1491; void*x1492; double x1493; void*x1494; void*x1495; void*x1496; char *x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; struct x1503; void*x1504; }*

@end
