/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories
 */

@interface MiroMemory : NSObject <NSCopying, NSSecureCoding> {
    PHAssetCollection * _assetCollection;
    NSDictionary * _assetsRanges;
    NSArray * _autoPickedAssetIDs;
    MiroBlueprint * _blueprint;
    MiroBlueprint * _customBlueprint;
    double  _customDuration;
    double  _durationRemainder;
    NSArray * _featuredPeople;
    NSDictionary * _freezeRanges;
    bool  _hasBuildingPosterImageBegun;
    bool  _isPregenerating;
    PHAsset * _keyAsset;
    NSString * _keyAssetID;
    NSDictionary * _loadedFreezeRanges;
    NSURL * _localPersistentFile;
    NSString * _localizedSubTitle;
    NSString * _localizedTitle;
    NSSet * _manuallyAddedAssetIDs;
    NSSet * _manuallyRemovedAssetIDs;
    double  _maximumPossibleMemoryDuration;
    MiroPickList * _pickList;
    long long  _pickedItemCount;
    NSObject<OS_dispatch_queue> * _saveQueue;
    double  _savedBareDuration;
    long long  _schema;
    bool  _storedPosterExists;
    MiroAssetClusteringVideoSegment * _titleScene;
    MiroTimePickBlueprintManager * _tpbManager;
    NSDate * _viewedDate;
}

@property (nonatomic, readonly) PHFetchResult *allAssets;
@property (nonatomic, retain) PHAssetCollection *assetCollection;
@property (nonatomic, retain) NSDictionary *assetsRanges;
@property (nonatomic, retain) NSArray *autoPickedAssetIDs;
@property (nonatomic, retain) MiroBlueprint *blueprint;
@property (nonatomic, readonly) NSString *currentMoodID;
@property (nonatomic, retain) MiroBlueprint *customBlueprint;
@property (nonatomic) double customDuration;
@property (nonatomic, retain) NSString *displayName;
@property (nonatomic, retain) NSString *displaySubtitle;
@property (nonatomic) double duration;
@property (nonatomic) unsigned long long durationRange;
@property (nonatomic) double durationRemainder;
@property (nonatomic, retain) NSArray *featuredPeople;
@property (nonatomic, retain) NSDictionary *freezeRanges;
@property (nonatomic) bool hasBuildingPosterImageBegun;
@property (nonatomic) bool isPregenerating;
@property (nonatomic, retain) PHAsset *keyAsset;
@property (retain) NSString *keyAssetID;
@property (nonatomic, retain) NSDictionary *loadedFreezeRanges;
@property (nonatomic, retain) NSURL *localPersistentFile;
@property (retain) NSString *localizedSubTitle;
@property (retain) NSString *localizedTitle;
@property (nonatomic, retain) NSSet *manuallyAddedAssetIDs;
@property (nonatomic, retain) NSSet *manuallyRemovedAssetIDs;
@property (nonatomic) double maximumPossibleMemoryDuration;
@property (nonatomic, readonly) double minimumPossibleMemoryDuration;
@property (nonatomic, readonly) NSArray *moodIDs;
@property (nonatomic, readonly) bool needsTitleCard;
@property (nonatomic, retain) MiroPickList *pickList;
@property (nonatomic) long long pickedItemCount;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *saveQueue;
@property (nonatomic) double savedBareDuration;
@property (nonatomic) long long schema;
@property (nonatomic) bool storedPosterExists;
@property (nonatomic, retain) MiroAssetClusteringVideoSegment *titleScene;
@property (nonatomic, retain) MiroTimePickBlueprintManager *tpbManager;
@property (nonatomic, retain) NSDate *viewedDate;

+ (id)_assetCollectionUniqueLocalIdentifier:(id)arg1;
+ (id)_displayableUuidWithUuid:(id)arg1;
+ (id)_saveURL;
+ (id)fileURLWithUuid:(id)arg1;
+ (void)initialize;
+ (id)memoryWithPHAssetCollection:(id)arg1;
+ (id)memoryWithPHAssetCollection:(id)arg1 keyAsset:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (double)_defaultDuration;
- (void)_deleteMetadata;
- (double)_durationForDurationRange:(unsigned long long)arg1;
- (void)_initAllAssetMetadata;
- (void)_manuallyAdd:(id)arg1 remove:(id)arg2 modify:(id)arg3 changeInItemCount:(long long)arg4;
- (void)_persistentRangesChanged:(id)arg1;
- (void)_saveMetadata;
- (void)_updateAddedRemovedLists;
- (void)_writeMetadata:(id)arg1;
- (id)allAssets;
- (id)allAssetsAsArray;
- (id)assetCollection;
- (bool)assetHasFaces:(id)arg1;
- (id)assetsRanges;
- (id)autoPickedAssetIDs;
- (double)bareDuration;
- (id)blueprint;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentMoodID;
- (id)currentVideoFreezeRangeForAssetID:(id)arg1 index:(int)arg2;
- (id)customBlueprint;
- (double)customDuration;
- (void)dealloc;
- (id)defaultMemoriesTitleHelper;
- (unsigned long long)demoDurationRangeForDuration:(double)arg1;
- (id)description;
- (id)displayName;
- (id)displaySubtitle;
- (double)duration;
- (unsigned long long)durationRange;
- (unsigned long long)durationRangeForDuration:(double)arg1;
- (double)durationRemainder;
- (void)encodeWithCoder:(id)arg1;
- (id)featuredPeople;
- (id)featuredPersonsInMemoryAsFaceRangesInAsset:(id)arg1;
- (id)freezeRanges;
- (id)freezeRangesToEncode;
- (bool)hasBuildingPosterImageBegun;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)invalidateCustomDuration;
- (bool)isEqual:(id)arg1;
- (bool)isPersistable;
- (bool)isPosterEqual:(id)arg1;
- (bool)isPregenerating;
- (id)keyAsset;
- (id)keyAssetID;
- (id)loadedFreezeRanges;
- (id)localPersistentFile;
- (id)localizedSubTitle;
- (id)localizedTitle;
- (void)manuallyAdd:(id)arg1 remove:(id)arg2;
- (id)manuallyAddedAssetIDs;
- (void)manuallyModify:(id)arg1 changeInSegmentCount:(long long)arg2;
- (id)manuallyRemovedAssetIDs;
- (unsigned long long)maxDurationRange;
- (double)maximumPossibleMemoryDuration;
- (double)mediumDemoDuration;
- (bool)memoryFeaturesPersonInAsset:(id)arg1;
- (double)minimumPossibleMemoryDuration;
- (id)moodIDs;
- (id)muteRangesForAsset:(id)arg1;
- (bool)needsTitleCard;
- (void)persist;
- (id)pickList;
- (id)pickedAssets;
- (long long)pickedItemCount;
- (id)pickedLocallyAvailableScenes;
- (id)rangesWithType:(unsigned long long)arg1 forAssetID:(id)arg2;
- (id)saveQueue;
- (double)savedBareDuration;
- (long long)schema;
- (void)setAssetCollection:(id)arg1;
- (void)setAssetsRanges:(id)arg1;
- (void)setAutoPickedAssetIDs:(id)arg1;
- (void)setBlueprint:(id)arg1;
- (void)setCustomBlueprint:(id)arg1;
- (void)setCustomDuration:(double)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDisplaySubtitle:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setDurationRange:(unsigned long long)arg1;
- (void)setDurationRemainder:(double)arg1;
- (void)setFeaturedPeople:(id)arg1;
- (void)setFreezeRanges:(id)arg1;
- (void)setHasBuildingPosterImageBegun:(bool)arg1;
- (void)setIsPregenerating:(bool)arg1;
- (void)setKeyAsset:(id)arg1;
- (void)setKeyAssetID:(id)arg1;
- (void)setLoadedFreezeRanges:(id)arg1;
- (void)setLocalPersistentFile:(id)arg1;
- (void)setLocalizedSubTitle:(id)arg1;
- (void)setLocalizedTitle:(id)arg1;
- (void)setManuallyAddedAssetIDs:(id)arg1;
- (void)setManuallyRemovedAssetIDs:(id)arg1;
- (void)setMaximumPossibleMemoryDuration:(double)arg1;
- (void)setPickList:(id)arg1;
- (void)setPickedItemCount:(long long)arg1;
- (void)setRanges:(id)arg1 replaceType:(unsigned long long)arg2 forAssetID:(id)arg3;
- (void)setSaveQueue:(id)arg1;
- (void)setSavedBareDuration:(double)arg1;
- (void)setSchema:(long long)arg1;
- (void)setStoredPosterExists:(bool)arg1;
- (void)setTitleScene:(id)arg1;
- (void)setTpbManager:(id)arg1;
- (void)setViewedDate:(id)arg1;
- (double)shortDemoDuration;
- (bool)storedPosterExists;
- (double)titleCardDuration;
- (id)titleScene;
- (id)tpbManager;
- (id)trimRangesForAsset:(id)arg1;
- (void)unPersist;
- (id)viewedDate;
- (bool)wasManuallyAdded:(id)arg1;
- (bool)wasManuallyRemoved:(id)arg1;

@end
