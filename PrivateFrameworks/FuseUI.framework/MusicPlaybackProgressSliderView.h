/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicPlaybackProgressSliderView : UIView <MusicPlaybackProgressScrubberDelegate, MusicPlaybackProgressScrubbing> {
    bool  _isTracking;
    NSObject<OS_dispatch_source> * _labelAdjustTimerSource;
    bool  _needsUpdateTimeLabelText;
    MusicPlaybackProgressSlider * _playbackProgressSlider;
    bool  _preventsTimerStart;
    struct CGSize { 
        double width; 
        double height; 
    }  _previousKnownSize;
    <MusicPlaybackProgressScrubberDelegate> * _scrubberDelegate;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _textLabelEdgeInsets;
    MPUTimeFormatter * _timeFormatter;
    UILabel * _timePlayedLabel;
    UILabel * _timeRemainingLabel;
}

@property (getter=isAlwaysLive, nonatomic) bool alwaysLive;
@property (nonatomic, readonly) long long currentScrubSpeed;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double effectiveCurrentTime;
@property (readonly) unsigned long long hash;
@property (nonatomic) float rate;
@property (nonatomic) <MusicPlaybackProgressScrubberDelegate> *scrubberDelegate;
@property (getter=isScrubbingEnabled, nonatomic) bool scrubbingEnabled;
@property (readonly) Class superclass;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } textLabelEdgeInsets;
@property (nonatomic) double totalDuration;

- (void).cxx_destruct;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_cancelTimeLabelUpdateTimer;
- (void)_reloadTimeLabelUpdateTimer;
- (void)_setNeedsUpdateTimeLabelText;
- (void)_setTracking:(bool)arg1;
- (bool)_updateTimeLabelsText;
- (void)cancelScrubbing;
- (long long)currentScrubSpeed;
- (void)dealloc;
- (double)effectiveCurrentTime;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isAlwaysLive;
- (bool)isScrubbingEnabled;
- (void)layoutSubviews;
- (void)playbackProgressScrubber:(id)arg1 didChangeCurrentTime:(double)arg2;
- (void)playbackProgressScrubber:(id)arg1 didChangeScrubSpeed:(long long)arg2;
- (void)playbackProgressScrubberTrackingDidBegin:(id)arg1;
- (void)playbackProgressScrubberTrackingDidEnd:(id)arg1;
- (float)rate;
- (id)scrubberDelegate;
- (void)setAlwaysLive:(bool)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setRate:(float)arg1;
- (void)setScrubberDelegate:(id)arg1;
- (void)setScrubbingEnabled:(bool)arg1;
- (void)setTextLabelEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setTotalDuration:(double)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textLabelEdgeInsets;
- (double)totalDuration;

@end
