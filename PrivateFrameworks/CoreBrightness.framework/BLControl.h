/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness
 */

@interface BLControl : NSObject {
    bool  AABEnabled;
    id /* block */  _callback;
    void * _callbackContext;
    id /* block */  _ecoModeNotificationHandler;
    int  _ecoModeNotificationToken;
    id /* block */  _ecoModePreferencesUpdateNotificationHandler;
    int  _ecoModePreferencesUpdateNotificationToken;
    NightModeControl * _nightModeControl;
    bool  _useMultiCurves;
    struct AABC {} * aab;
    bool  aabExist;
    struct __IOHIDServiceClient {} * alsClient;
    unsigned int  alsCount;
    unsigned int  alsNode;
    unsigned int  alsOrientation;
    unsigned int  backlight;
    struct __Display {} * display;
    unsigned int  displayCount;
    unsigned int  driverNode;
    struct __IOHIDEventSystemClient { } * hidSystemClient;
    bool  ignoreALSEvents;
    bool  ignoreBrightnessKey;
    struct LegacyBacklightC { int (**x1)(); unsigned int x2; struct __Display {} *x3; unsigned int x4; int x5; struct __IOHIDServiceClient {} *x6; float x7; struct _ALS_Struct { float x_8_1_1; float x_8_1_2; float x_8_1_3; float x_8_1_4; int x_8_1_5; float x_8_1_6; float x_8_1_7; float x_8_1_8; float x_8_1_9; id x_8_1_10; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x_8_1_11; void*x_8_1_12; unsigned int x_8_1_13; bool x_8_1_14; bool x_8_1_15; float x_8_1_16; float x_8_1_17; float x_8_1_18; } x8; struct { int x_9_1_1; unsigned char x_9_1_2; float x_9_1_3; unsigned int x_9_1_4; id x_9_1_5; struct { unsigned char x_6_2_1; float x_6_2_2; id x_6_2_3; } x_9_1_6; struct __CFDictionary {} *x_9_1_7; float x_9_1_8; int (*x_9_1_9)(); void *x_9_1_10; } x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; char *x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; union x39; void*x40; in void*x41; out void*x42; in void*x43; void*x44; void*x45; void*x46; void*x47; out void*x48; void*x49; void*x50; int x51; void*x52; BOOL x53; void*x54; void*x55; void*x56; void*x57; void*x58; const void*x59; void*x60; void*x61; void*x62; void*x63; double x64; void*x65; out void*x66; in void*x67; long x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; const void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; int x83; void*x84; in void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; unsigned int x92; void*x93; unsigned char x94; void*x95; out void*x96; long x97; void*x98; out void*x99; const void*x100; void*x101; void*x102; char *x103; void*x104; long x105; void*x106; void*x107; void*x108; void*x109; void*x110; const void*x111; in void*x112; void*x113; void*x114; out void*x115; const void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; unsigned char x127; void*x128; out void*x129; long x130; void*x131; out void*x132; const void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; } * legacyAutoBacklight;
    bool  monitorALSOnly;
    struct __IOHIDServiceClient {} * otherClients;
    unsigned int  otherClientsCount;
    bool  overrideIgnoreBrightness;
    NSObject<OS_dispatch_queue> * queue;
    NSObject<OS_dispatch_queue> * rootQueue;
    bool  useRootQueue;
}

- (void)callBlockWithProperty:(struct __CFString { }*)arg1 value:(void*)arg2;
- (void*)copyBLControlPropertyWithkey:(struct __CFString { }*)arg1;
- (void*)copyPropertyWithKey:(struct __CFString { }*)arg1 client:(struct __CFNumber { }*)arg2;
- (struct __CFDictionary { }*)createDictWithUsagePairPage:(unsigned int)arg1 usage:(unsigned int)arg2;
- (bool)findAlsNodes;
- (bool)findBacklight;
- (bool)findHIDClients;
- (id)init;
- (void)registerNotificationBlock:(id /* block */)arg1;
- (int)rootQueuePthreadAttrInit:(struct _opaque_pthread_attr_t { long long x1; BOOL x2[56]; }*)arg1;
- (bool)setBLControlPropertyWithKey:(struct __CFString { }*)arg1 property:(void*)arg2;
- (bool)setPropertyWithKey:(struct __CFString { }*)arg1 property:(void*)arg2 client:(struct __CFNumber { }*)arg3;
- (bool)start;
- (void)stop;

@end
