/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer
 */

@interface ISPlayer : NSObject <ISChangeObserver, ISInputControllerDelegate, ISPlaybackControllerObserver, ISPlaybackSpecObserver> {
    NSHashTable * __changeObservers;
    long long  __currentMediaServicesResetID;
    bool  __hasPendingVitalityHint;
    ISInputController * __inputController;
    ISPlayerOutputContent * __outputContent;
    NSHashTable * __outputs;
    ISPlaybackController * __playbackController;
    ISPlayerContent * __playerContent;
    ISVitalityInput * __vitalityHintInput;
    <ISPlayerDelegate> * _delegate;
    struct CGSize { 
        double width; 
        double height; 
    }  _dimensionsOfReservedVideoMemory;
    NSError * _error;
    bool  _managesAudioSession;
    NSObject<OS_dispatch_queue> * _observerQueue;
    bool  _photoVisible;
    ISPlaybackSpec * _playbackSpec;
    long long  _playbackState;
    ISPlayerItem * _playerItem;
    bool  _shouldManagePlayerItemLoading;
    long long  _status;
    ISWrappedAVPlayer * _videoPlayer;
}

@property (nonatomic, readonly) NSHashTable *_changeObservers;
@property (setter=_setCurrentMediaServicesResetID:, nonatomic) long long _currentMediaServicesResetID;
@property (setter=_setHasPendingHint:, nonatomic) bool _hasPendingVitalityHint;
@property (setter=_inputController:, nonatomic, retain) ISInputController *_inputController;
@property (setter=_setOutputContent:, nonatomic, retain) ISPlayerOutputContent *_outputContent;
@property (setter=_setOutputs:, nonatomic, retain) NSHashTable *_outputs;
@property (setter=_setPlaybackController:, nonatomic, retain) ISPlaybackController *_playbackController;
@property (setter=_setPlayerContent:, nonatomic, retain) ISPlayerContent *_playerContent;
@property (nonatomic, readonly) ISVitalityInput *_vitalityHintInput;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ISPlayerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (setter=_setError:, nonatomic, retain) NSError *error;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSSet *inputs;
@property (nonatomic, readonly) bool managesAudioSession;
@property (setter=_setPlaybackState:, nonatomic) long long playbackState;
@property (nonatomic, retain) ISPlayerItem *playerItem;
@property (nonatomic) bool shouldManagePlayerItemLoading;
@property (setter=_setStatus:, nonatomic) long long status;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_changeObservers;
- (void)_configurePlayerItemWithPlaybackSpec;
- (long long)_currentMediaServicesResetID;
- (void)_enumerateObserversWithBlock:(id /* block */)arg1;
- (void)_handleMediaServicesResetIfNecessaryForError:(id)arg1;
- (bool)_hasPendingVitalityHint;
- (id)_inputController;
- (void)_inputController:(id)arg1;
- (void)_notifyVitalityEndHandler;
- (id)_outputContent;
- (id)_outputs;
- (id)_playbackController;
- (id)_playerContent;
- (void)_resetMediaObjectsWithResetID:(long long)arg1;
- (void)_seekForVitalityHintIsScrubbing:(bool)arg1;
- (void)_setCurrentMediaServicesResetID:(long long)arg1;
- (void)_setError:(id)arg1;
- (void)_setHasPendingHint:(bool)arg1;
- (void)_setOutputContent:(id)arg1;
- (void)_setOutputs:(id)arg1;
- (void)_setPlaybackController:(id)arg1;
- (void)_setPlaybackState:(long long)arg1;
- (void)_setPlayerContent:(id)arg1;
- (void)_setStatus:(long long)arg1;
- (void)_setupAVObjects;
- (void)_triggerVitalyHintPlayback;
- (void)_updateOutputContent;
- (void)_updatePlayback;
- (void)_updateStatus;
- (id)_vitalityHintInput;
- (void)addInput:(id)arg1;
- (void)addOutput:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentTime;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duration;
- (id)error;
- (id)init;
- (id)initWithManagesAudioSession:(bool)arg1;
- (id)initWithVideoPlayer:(id)arg1;
- (void)inputControllerDidChange:(id)arg1;
- (id)inputs;
- (bool)isPhotoVisible;
- (bool)isPlayingVitality;
- (bool)isPlayingVitalityHint;
- (bool)managesAudioSession;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)playVitalityHint;
- (void)playbackControllerPlaybackStateDidChange:(id)arg1;
- (void)playbackControllerPlayerStatusDidChange:(id)arg1;
- (void)playbackControllerPlayingVitalityDidChange:(id)arg1;
- (id)playbackSpec;
- (void)playbackSpecDidChange:(id)arg1;
- (long long)playbackState;
- (id)playerItem;
- (void)registerChangeObserver:(id)arg1;
- (void)removeAllInputs;
- (void)removeInput:(id)arg1;
- (void)removeOutput:(id)arg1;
- (void)seekForVitalityHintIfNeeded;
- (void)setDelegate:(id)arg1;
- (void)setDimensionsOfReservedVideoMemory:(struct CGSize { double x1; double x2; })arg1;
- (void)setPlaybackSpec:(id)arg1;
- (void)setPlayerItem:(id)arg1;
- (void)setShouldManagePlayerItemLoading:(bool)arg1;
- (bool)shouldManagePlayerItemLoading;
- (long long)status;
- (void)unregisterChangeObserver:(id)arg1;

@end
