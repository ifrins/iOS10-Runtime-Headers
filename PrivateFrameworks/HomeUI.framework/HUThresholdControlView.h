/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI
 */

@interface HUThresholdControlView : UIView <HUControlView> {
    bool  _canBeHighlighted;
    <HUControlViewDelegate> * _delegate;
    UILabel * _fromLabel;
    UILabel * _fromValueLabel;
    NSString * _identifier;
    NSArray * _labelConstraints;
    HFTemperatureThresholdValue * _thresholdValue;
    UILabel * _toLabel;
    UILabel * _toValueLabel;
    NSFormatter * _valueFormatter;
    bool  _viewDisabled;
}

@property (nonatomic) bool canBeHighlighted;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HUControlViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDisabled, nonatomic) bool disabled;
@property (nonatomic, retain) UILabel *fromLabel;
@property (nonatomic, retain) UILabel *fromValueLabel;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSArray *labelConstraints;
@property (readonly) Class superclass;
@property (nonatomic, retain) HFTemperatureThresholdValue *thresholdValue;
@property (nonatomic, retain) UILabel *toLabel;
@property (nonatomic, retain) UILabel *toValueLabel;
@property (nonatomic, retain) id value;
@property (nonatomic, retain) NSFormatter *valueFormatter;
@property (nonatomic) bool viewDisabled;

+ (Class)valueClass;

- (void).cxx_destruct;
- (id)_defaultValueFormatter;
- (bool)canBeHighlighted;
- (id)delegate;
- (id)fromLabel;
- (id)fromValueLabel;
- (id)identifier;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isDisabled;
- (id)labelConstraints;
- (void)setCanBeHighlighted:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisabled:(bool)arg1;
- (void)setFromLabel:(id)arg1;
- (void)setFromValueLabel:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLabelConstraints:(id)arg1;
- (void)setThresholdValue:(id)arg1;
- (void)setToLabel:(id)arg1;
- (void)setToValueLabel:(id)arg1;
- (void)setValue:(id)arg1;
- (void)setValueFormatter:(id)arg1;
- (void)setViewDisabled:(bool)arg1;
- (id)thresholdValue;
- (id)toLabel;
- (id)toValueLabel;
- (void)updateConstraints;
- (id)value;
- (id)valueFormatter;
- (bool)viewDisabled;

@end
