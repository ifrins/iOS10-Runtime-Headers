/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKBuildingFootprintMapModel : VKVectorMapModel <VKMapLayer, VKMercatorTerrainHeightProvider> {
    struct RenderItemBatcher { 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        struct RenderItem {} *_prototype; 
        struct Pool<ggl::RenderItem> { 
            struct set<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                    struct __tree_node<void *, void *> {} *__begin_node_; 
                    struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<void *, void *> > > { 
                        struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                            struct __tree_node_base<void *> {} *__left_; 
                        } __first_; 
                    } __pair1_; 
                    struct __compressed_pair<unsigned long, std::__1::less<void *> > { 
                        unsigned long long __first_; 
                    } __pair3_; 
                } __tree_; 
            } mAllocatedSlabs; 
            unsigned long long mElementsPerSlab; 
            unsigned long long mSlabSize; 
            struct FreeList {} *mFreeElement; 
        } _pool; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
    }  _batcher;
    float  _brightness;
    float  _buildingChangeoverZ;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingFacadeDepth::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _buildingDepthPipelineSetupPool;
    struct shared_ptr<ggl::BuildingFacadeDepth::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _buildingDepthPipelineState;
    int  _buildingMode;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingPointyRoofDepth::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _buildingPointyRoofDepthPipelineSetupPool;
    struct shared_ptr<ggl::BuildingPointyRoofDepth::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _buildingPointyRoofDepthPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _buildingRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingTopDepth::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _buildingTopDepthPipelineSetupPool;
    struct shared_ptr<ggl::BuildingTopDepth::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _buildingTopDepthPipelineState;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _clearItem;
    struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, std::__1::allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList> > > { 
        struct __hash_table<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true>, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true>, std::__1::allocator<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _currentOccluders;
    <VKBuildingFootprintMapModelDelegate> * _delegate;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _depthPassRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::DiffuseBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _diffuseBuildingPipelineSetupPool;
    struct shared_ptr<ggl::DiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::DiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::DiffuseBuildingPointyRoof::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _diffusePointyRoofPipelineSetupPool;
    struct shared_ptr<ggl::DiffuseBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffusePointyRoofPipelineStateWithBlending;
    struct shared_ptr<ggl::DiffuseBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffusePointyRoofPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::DiffuseBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _diffuseTopPipelineSetupPool;
    struct shared_ptr<ggl::DiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseTopPipelineStateWithBlending;
    struct shared_ptr<ggl::DiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _diffuseTopPipelineStateWithoutBlending;
    VKTimedAnimation * _fadeBuildingAnimation;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::Building::Fade> > { 
        struct ConstantDataTyped<ggl::Building::Fade> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fadeConstantData;
    bool  _fadeNeedsAlpha;
    bool  _fadeTiles;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingFlat::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _fillPipelineSetupPool;
    struct shared_ptr<ggl::BuildingFlat::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillPipelineStateWithBlending;
    struct shared_ptr<ggl::BuildingFlat::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillPipelineStateWithoutBlending;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillRenderState;
    bool  _fogEnabled;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedDiffuseBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedDiffuseBuildingPipelineSetupPool;
    struct shared_ptr<ggl::FoggedDiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedDiffuseBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedDiffuseTopPipelineSetupPool;
    struct shared_ptr<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseTopPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedDiffuseBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedDiffuseTopPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedSpecularBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedSpecularBuildingPipelineSetupPool;
    struct shared_ptr<ggl::FoggedSpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedSpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _foggedSpecularTopPipelineSetupPool;
    struct shared_ptr<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularTopPipelineStateWithBlending;
    struct shared_ptr<ggl::FoggedSpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _foggedSpecularTopPipelineStateWithoutBlending;
    VKMercatorTerrainHeightCache * _heightCache;
    bool  _initializedStyles;
    VK3DObjectSubMapModel * _landmarksModel;
    struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, std::__1::allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList> > > { 
        struct __hash_table<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true>, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true>, std::__1::allocator<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::hash<VKVectorTile *>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<VKVectorTile *, std::__1::__hash_value_type<VKVectorTile *, OccluderGroupList>, std::__1::equal_to<VKVectorTile *>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _previousOccluders;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingShadow::MeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _shadowPipelineSetupPool;
    struct shared_ptr<ggl::BuildingShadow::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _shadowPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _shadowRenderItemPool;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _shadowsRenderState;
    bool  _shouldDraw3DBuildingsIn3DBuildingsRenderPass;
    bool  _shouldDraw3DBuildingsInVectorBuildingsRenderPass;
    VKSkyModel * _skyModel;
    struct unique_ptr<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::SpecularBuilding::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _specularBuildingPipelineSetupPool;
    struct shared_ptr<ggl::SpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularBuildingPipelineStateWithBlending;
    struct shared_ptr<ggl::SpecularBuilding::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularBuildingPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> > > { 
            struct FragmentedPool<ggl::SpecularBuildingPointyRoof::BuildingPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _specularPointyRoofPipelineSetupPool;
    struct shared_ptr<ggl::SpecularBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularPointyRoofPipelineStateWithBlending;
    struct shared_ptr<ggl::SpecularBuildingPointyRoof::BuildingPipelineState> { 
        struct BuildingPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularPointyRoofPipelineStateWithoutBlending;
    struct unique_ptr<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::SpecularBuildingTop::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _specularTopPipelineSetupPool;
    struct shared_ptr<ggl::SpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularTopPipelineStateWithBlending;
    struct shared_ptr<ggl::SpecularBuildingTop::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _specularTopPipelineStateWithoutBlending;
    int  _stencilRef;
    struct unique_ptr<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> > > { 
            struct FragmentedPool<ggl::PrefilteredLine::PrefilteredLinePipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _stroke3DPipelineSetupPool;
    struct shared_ptr<ggl::PrefilteredLine::PrefilteredLinePipelineState> { 
        struct PrefilteredLinePipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _stroke3DPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::RenderItem> *, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem> > > { 
            struct FragmentedPool<ggl::RenderItem> {} *__first_; 
        } __ptr_; 
    }  _stroke3DRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> > > { 
            struct FragmentedPool<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _strokePipelineSetupPool;
    struct shared_ptr<ggl::BuildingFlatStroke::BuildingFlatStrokePipelineState> { 
        struct BuildingFlatStrokePipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _strokePipelineState;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _strokeRenderState;
    VKTimedAnimation * _styleChangeAnimation;
    struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { 
        struct StylesheetManager<gss::PropertyID> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _styleManager;
    bool  _supports3DBuildings;
    bool  _supports3DStrokes;
    bool  _supportsBuildingShadows;
    bool  _supportsPerFragmentLighting;
    bool  _supportsStrokes;
    int  _targetBuildingMode;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _threeDRenderState;
    struct shared_ptr<ggl::RenderState> { 
        struct RenderState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _threeDStrokeRenderState;
}

@property (nonatomic) float buildingChangeoverZ;
@property (nonatomic) int buildingMode;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VKBuildingFootprintMapModelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool fadeTiles;
@property (getter=isFogEnabled, nonatomic) bool fogEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) VKMercatorTerrainHeightCache *heightCache;
@property (nonatomic, retain) VK3DObjectSubMapModel *landmarksModel;
@property (nonatomic, retain) VKSkyModel *skyModel;
@property (nonatomic) struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; } styleManager;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_clearOccluders;
- (void)_updateBuildingModeForContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (void)_updateStyles;
- (void)addTilesInScene:(id)arg1 toSet:(id)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3;
- (void)animateTiles:(id)arg1 fromAlpha:(float)arg2 toAlpha:(float)arg3 fromScale:(float)arg4 toScale:(float)arg5;
- (float)buildingChangeoverZ;
- (int)buildingMode;
- (void)dealloc;
- (id)delegate;
- (void)didReceiveMemoryWarning:(bool)arg1;
- (struct shared_ptr<ggl::ConstantDataTyped<ggl::Building::Fade> > { struct ConstantDataTyped<ggl::Building::Fade> {} *x1; struct __shared_weak_count {} *x2; }*)fadeConstantData;
- (bool)fadeNeedsAlpha;
- (bool)fadeTiles;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)flushPools;
- (void)generate2DBuildingRenderItemsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; short x32; void*x33; const void*x34; BOOL x35; void*x36; void*x37; void*x38; void*x39; BOOL x40; out void*x41; void*x42; const void*x43; short x44; short x45; void*x46; double x47; void*x48; void*x49; void*x50; int x51; const void*x52; short x53; void*x54; double x55; SEL x56; SEL x57; void*x58; void*x59; void*x60; SEL x61; SEL x62; void*x63; void*x64; void*x65; const void*x66; void*x67; void*x68; void*x69; in double x70; void*x71; in out double x72; void*x73; void*x74; short x75; void*x76; double x77; SEL x78; SEL x79; void*x80; void*x81; void*x82; SEL x83; SEL x84; void*x85; void*x86; void*x87; const void*x88; void*x89; void*x90; in out double x91; void*x92; void*x93; unsigned int x94/* : ? */; void*x95; short x96; void*x97; void*x98; void x99; out int x100; double x101; void*x102; char *x103; void*x104; void*x105; char *x106; void*x107; void*x108; void*x109; short x110; void*x111; double x112; SEL x113; SEL x114; void*x115; void*x116; void*x117; SEL x118; SEL x119; void*x120; long x121; long x122; out BOOL x123; void*x124; void*x125; out const void*x126; short x127; void*x128; double x129; SEL x130; SEL x131; void*x132; void*x133; void*x134; SEL x135; SEL x136; void*x137; void*x138; void*x139; const void*x140; void*x141; void*x142; in out double x143; void*x144; void*x145; void x146; out int x147; double x148; void*x149; char *x150; void*x151; void*x152; void x153; out int x154; double x155; void*x156; char *x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; struct  
                        struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                            struct __tree_node_base<void *> { {} x164; void*x165; char *x166; void*x167; void*x168; long x169; void*x170; float x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; }*)arg3;
- (void)generate2DBuildingRenderItemsIfNecessaryForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; const void*x23; int x24; void*x25; in void*x26; void*x27; void*x28; void*x29; void*x30; struct x31; void*x32; }*)arg3;
- (void)generate3DBuildingRenderItemsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; SEL x24; SEL x25; void*x26; long x27; long x28; out BOOL x29; void*x30; void*x31; out const void*x32; void*x33; void*x34; out SEL x35; SEL x36; float x37; void*x38; short x39; void*x40; void*x41; short x42; void*x43; void*x44; const void*x45; double x46; void*x47; void*x48; void*x49; const void*x50; void*x51; void*x52; long x53; SEL x54; SEL x55; unsigned long long x56; void*x57; void*x58; const void*x59; unsigned int x60; void*x61; void*x62; void*x63; void*x64; void*x65; char *x66; void*x67; void*x68; void*x69; void*x70; struct  struct fast_shared_ptr<ggl::QueryItem> { {} x71; void*x72; char *x73; char *x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; short x84; void*x85; const void*x86; BOOL x87; void*x88; void*x89; float x90; void*x91; short x92; void*x93; void*x94; short x95; void*x96; void*x97; const void*x98; double x99; void*x100; void*x101; void*x102; const void*x103; void*x104; void*x105; long x106; SEL x107; SEL x108; unsigned long long x109; void*x110; void*x111; const void*x112; unsigned int x113; void*x114; void*x115; void*x116; void*x117; void*x118; struct  {} x119; void*x120; char *x121; char *x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; short x132; void*x133; const void*x134; BOOL x135; void*x136; void*x137; float x138; void*x139; short x140; void*x141; void*x142; short x143; void*x144; void*x145; const void*x146; double x147; void*x148; void*x149; void*x150; const void*x151; void*x152; void*x153; long x154; SEL x155; SEL x156; unsigned long long x157; void*x158; void*x159; const void*x160; unsigned int x161; void*x162; void*x163; void*x164; void*x165; void*x166; struct  {} x167; void*x168; char *x169; char *x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; short x180; void*x181; const void*x182; BOOL x183; void*x184; void*x185; void*x186; void*x187; BOOL x188; out void*x189; void*x190; const void*x191; short x192; short x193; void*x194; double x195; void*x196; void*x197; void*x198; int x199; const void*x200; void*x201; void*x202; out SEL x203; SEL x204; float x205; void*x206; short x207; void*x208; void*x209; short x210; void*x211; void*x212; const void*x213; double x214; void*x215; void*x216; void*x217; const void*x218; void*x219; void*x220; long x221; SEL x222; SEL x223; unsigned long long x224; void*x225; void*x226; const void*x227; unsigned int x228; void*x229; void*x230; void*x231; void*x232; void*x233; char *x234; char *x235; void*x236; void*x237; short x238; void*x239; double x240; SEL x241; SEL x242; void*x243; void*x244; void*x245; SEL x246; SEL x247; void*x248; long x249; long x250; out BOOL x251; void*x252; void*x253; out const void*x254; void*x255; void*x256; out SEL x257; SEL x258; float x259; void*x260; short x261; void*x262; void*x263; short x264; void*x265; void*x266; const void*x267; double x268; void*x269; void*x270; void*x271; const void*x272; void*x273; void*x274; long x275; SEL x276; SEL x277; unsigned long long x278; void*x279; void*x280; const void*x281; unsigned int x282; void*x283; void*x284; void*x285; void*x286; void*x287; char *x288; void*x289; void*x290; void*x291; void*x292; struct x293; void*x294; void*x295; void*x296; const void*x297; void*x298; void*x299; BOOL x300; void*x301; void*x302; void*x303; void*x304; void*x305; double x306; void*x307; void*x308; void*x309; long long x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; long x322; void*x323; SEL x324; void*x325; SEL x326; void*x327; void*x328; void*x329; void*x330; void*x331; in void*x332; double x333; void*x334; int x335; void*x336; in void*x337; void*x338; void*x339; unsigned long long x340; void*x341; void*x342; void*x343; void*x344; void*x345; const void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; short x353; void*x354; void*x355; void*x356; double x357; void*x358; SEL x359; void*x360; SEL x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; SEL x369; void*x370; SEL x371; void*x372; void*x373; void*x374; long x375; void*x376; long x377; void*x378; out void*x379; BOOL x380; void*x381; void*x382; void*x383; void*x384; void*x385; out void*x386; const void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; long x394; void*x395; SEL x396; void*x397; SEL x398; void*x399; void*x400; void*x401; void*x402; void*x403; in void*x404; double x405; void*x406; int x407; void*x408; in void*x409; void*x410; void*x411; unsigned long long x412; void*x413; void*x414; void*x415; void*x416; void*x417; const void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; struct x429; void*x430; void*x431; void*x432; short x433; void*x434; void*x435; void*x436; const void*x437; void*x438; void*x439; BOOL x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; short x450; void*x451; void*x452; void*x453; long x454; void*x455; int x456; void*x457; void*x458; void*x459; void*x460; void*x461; unsigned int x462/* : ? */; void*x463; void*x464; void*x465; float x466; void*x467; float x468; void*x469; void*x470; void*x471; const void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; long x479; void*x480; SEL x481; void*x482; SEL x483; void*x484; void*x485; void*x486; void*x487; void*x488; in void*x489; double x490; void*x491; int x492; void*x493; in void*x494; void*x495; void*x496; unsigned long long x497; void*x498; void*x499; void*x500; void*x501; void*x502; const void*x503; void*x504; void*x505; void*x506; void*x507; char *x508; void*x509; void*x510; void*x511; void*x512; void*x513; short x514; void*x515; void*x516; void*x517; double x518; void*x519; SEL x520; void*x521; SEL x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; SEL x530; void*x531; SEL x532; void*x533; void*x534; void*x535; long x536; void*x537; long x538; void*x539; out void*x540; BOOL x541; void*x542; void*x543; void*x544; void*x545; void*x546; out void*x547; const void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; long x555; void*x556; SEL x557; void*x558; SEL x559; void*x560; void*x561; void*x562; void*x563; void*x564; in void*x565; double x566; void*x567; int x568; void*x569; in void*x570; void*x571; void*x572; unsigned long long x573; void*x574; void*x575; void*x576; void*x577; void*x578; const void*x579; void*x580; void*x581; void*x582; void*x583; char *x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; struct x594; void*x595; void*x596; void*x597; short x598; void*x599; void*x600; void*x601; const void*x602; void*x603; void*x604; BOOL x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; in void*x615; double x616; void*x617; int x618; void*x619; in void*x620; void*x621; void*x622; unsigned long long x623; void*x624; void*x625; void*x626; void*x627; void*x628; const void*x629; void*x630; void*x631; void*x632; void*x633; struct x634; void*x635; }*)arg3;
- (void)generate3DBuildingRenderItemsIfNecessaryForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; bool x29; void*x30; const void*x31; int x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; in void*x40; void*x41; void*x42; short x43; void*x44; short x45; void*x46; SEL x47; void*x48; SEL x49; void*x50; void*x51; void*x52; void*x53; void*x54; short x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void**x62; void*x63; void*x64; void*x65; void*x66; void*x67; unsigned int x68/* : ? */; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void**x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; char *x85; void*x86; struct x87; void*x88; void*x89; void*x90; short x91; void*x92; void*x93; void*x94; const void*x95; void*x96; void*x97; BOOL x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; short x108; void*x109; void*x110; void*x111; void*x112; void*x113; int x114; void*x115; void*x116; void*x117; void*x118; void*x119; long x120; void*x121; void*x122; void**x123; void*x124; void*x125; void*x126; void*x127; void*x128; unsigned int x129/* : ? */; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void**x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; short x164; void*x165; void*x166; void*x167; const void*x168; void*x169; void*x170; BOOL x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; short x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void**x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; Class x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; }*)arg3;
- (void)generateDiffuseRenderItemsForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 flatQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg4 pointyQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg5 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg6 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg7 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; in short x33; int x34; void*x35; in void*x36; double x37; void*x38; long x39; out in void*x40; void*x41; long x42; out in void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; short x55; void*x56; const void*x57; BOOL x58; void*x59; void*x60; void*x61; void*x62; BOOL x63; out void*x64; void*x65; const void*x66; short x67; short x68; void*x69; double x70; void*x71; void*x72; void*x73; int x74; const void*x75; void*x76; in short x77; int x78; void*x79; in void*x80; double x81; void*x82; long x83; out in void*x84; void*x85; void*x86; short x87; void*x88; double x89; SEL x90; SEL x91; void*x92; void*x93; void*x94; SEL x95; SEL x96; void*x97; long x98; long x99; out BOOL x100; void*x101; void*x102; out const void*x103; void*x104; void*x105; long x106; SEL x107; SEL x108; void*x109; void*x110; in double x111; int x112; in void*x113; unsigned long long x114; void*x115; void*x116; const void*x117; void*x118; void*x119; void*x120; void*x121; struct  unsigned long long x_3_2_1;  {} x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; }*)arg8 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg9 alpha:(float)arg10 scale:(float)arg11 zoomLevel:(float)arg12 numTextures:(unsigned int)arg13 cullingMask:(unsigned int)arg14;
- (void)generateRenderItemsForBuildingShadowsInScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; BOOL x24; void*x25; void*x26; const void*x27; char *x28; void*x29; void*x30; void*x31; void*x32; int x33; in void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; int x40; in void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; int x47; in void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; int x54; in void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; in short x62; int x63; void*x64; in void*x65; double x66; void*x67; int x68; in void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; short x76; void*x77; const void*x78; BOOL x79; void*x80; void*x81; short x82; void*x83; void*x84; const void*x85; double x86; void*x87; void*x88; void*x89; const void*x90; BOOL x91; out in short x92; void*x93; void*x94; void*x95; void*x96; long x97; SEL x98; SEL x99; void*x100; void*x101; void*x102; void*x103; void*x104; const void*x105; long doublex106; void*x107; void*x108; void*x109; void*x110; short x111; void*x112; const void*x113; BOOL x114; void*x115; void*x116; void*x117; struct  struct TextureDataAbstract { {} x118; void*x119; char *x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; short x131; void*x132; const void*x133; BOOL x134; void*x135; void*x136; void*x137; void*x138; short x139; void*x140; void*x141; const void*x142; double x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; BOOL x150; out void*x151; in void*x152; void*x153; struct  {} x154; void*x155; char *x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; }*)arg3 drawOrder:(unsigned int)arg4;
- (void)generateSpecularRenderItemsForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 flatQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg4 pointyQueries:(const struct vector<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> >, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x2; struct __compressed_pair<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > *, std::__1::allocator<std::__1::shared_ptr<gss::StylesheetQuery<gss::PropertyID> > > > { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID> > {} *x_3_1_1; } x3; }*)arg5 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg6 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg7 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void x27; out int x28; double x29; char *x30; void*x31; void*x32; void*x33; void*x34; void*x35; void x36; out int x37; double x38; char *x39; void*x40; void*x41; void*x42; void*x43; void*x44; int x45; in void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; int x53; in void*x54; void x55; out int x56; double x57; char *x58; void*x59; void*x60; void*x61; void*x62; void*x63; void x64; out int x65; double x66; char *x67; void*x68; void*x69; void*x70; void*x71; void*x72; void x73; out int x74; double x75; char *x76; void*x77; void*x78; void*x79; void*x80; void*x81; void x82; out int x83; double x84; char *x85; void*x86; void*x87; void*x88; void*x89; void*x90; void x91; out int x92; double x93; char *x94; void*x95; void*x96; void*x97; void*x98; void*x99; void x100; out int x101; double x102; char *x103; void*x104; void*x105; void*x106; void*x107; void*x108; int x109; in void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; int x117; in void*x118; void x119; out int x120; double x121; char *x122; void*x123; void*x124; void*x125; void*x126; void*x127; void x128; out int x129; double x130; char *x131; void*x132; void*x133; void*x134; void*x135; void*x136; void x137; out int x138; double x139; char *x140; void*x141; void*x142; void*x143; void*x144; void*x145; void x146; out int x147; double x148; char *x149; void*x150; void*x151; void*x152; void*x153; void*x154; void x155; out int x156; double x157; char *x158; void*x159; void*x160; void*x161; void*x162; void*x163; void x164; out int x165; double x166; char *x167; void*x168; void*x169; void*x170; void*x171; void*x172; int x173; in void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; int x181; in void*x182; void x183; out int x184; double x185; char *x186; void*x187; void*x188; void*x189; void*x190; void*x191; void x192; out int x193; double x194; char *x195; void*x196; void*x197; void*x198; void*x199; void*x200; void x201; out int x202; double x203; char *x204; void*x205; void*x206; void*x207; void*x208; void*x209; void x210; out int x211; double x212; char *x213; void*x214; void*x215; void*x216; void*x217; void*x218; void x219; out int x220; double x221; char *x222; void*x223; void*x224; void*x225; void*x226; void*x227; void x228; out int x229; double x230; char *x231; void*x232; void*x233; void*x234; void*x235; void*x236; void x237; out int x238; double x239; char *x240; void*x241; void*x242; void*x243; void*x244; void*x245; int x246; in void*x247; short x248; void*x249; out const void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; int x257; in void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void x265; out int x266; double x267; char *x268; void*x269; void*x270; void*x271; void*x272; void*x273; int x274; in void*x275; void x276; out int x277; double x278; char *x279; void*x280; void*x281; void*x282; void*x283; void*x284; double x285; out void*x286; unsigned int x287/* : ? */; long x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void x296; out int x297; double x298; char *x299; void*x300; void*x301; void*x302; void*x303; void*x304; int x305; in void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; int x313; in void*x314; void x315; out int x316; double x317; char *x318; void*x319; void*x320; void*x321; void*x322; void*x323; void x324; out int x325; double x326; char *x327; void*x328; void*x329; void*x330; void*x331; void*x332; void x333; out int x334; double x335; char *x336; void*x337; void*x338; void*x339; void*x340; void*x341; void x342; out int x343; double x344; char *x345; void*x346; void*x347; void*x348; int x349; void*x350; in void*x351; void*x352; void*x353; void*x354; void*x355; union x356; void*x357; char *x358; void*x359; char *x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; union x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; BOOL x376; void*x377; void*x378; void*x379; void*x380; void*x381; const void*x382; void*x383; void*x384; char *x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; in void*x397; short x398; void*x399; int x400; void*x401; void*x402; void*x403; in void*x404; void*x405; void*x406; double x407; void*x408; void*x409; void*x410; BOOL x411; void*x412; void*x413; void*x414; void*x415; void*x416; const void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; short x428; void*x429; void*x430; void*x431; const void*x432; void*x433; void*x434; BOOL x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; in void*x445; double x446; void*x447; void*x448; void*x449; const void*x450; unsigned long long x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; struct x463; void*x464; }*)arg8 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg9 alpha:(float)arg10 scale:(float)arg11 zoomLevel:(float)arg12 numTextures:(unsigned int)arg13 cullingMask:(unsigned int)arg14;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getDiffusePointyRoofPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getDiffuseTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getExtrusionDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getExtrusionPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getFoggedDiffuseTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getFoggedExtrusionPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 texture:(struct Texture2D { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; int x6; int x7; int x8; int x9; unsigned int x10; struct shared_ptr<const ggl::TextureDataAbstract> { struct TextureDataAbstract {} *x_11_1_1; struct __shared_weak_count {} *x_11_1_2; } x11; bool x12; bool x13; unsigned int x14; unsigned int x15; bool x16; struct shared_ptr<ggl::SamplerState> { struct SamplerState {} *x_17_1_1; struct __shared_weak_count {} *x_17_1_2; } x17; }*)arg4 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg5 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg6 scale:(float)arg7;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getFoggedSpecularTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getPointyRoofDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct BuildingPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getSpecularPointyRoofPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 fogConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Fog::Skyfog> > { struct ConstantDataTyped<ggl::Fog::Skyfog> {} *x1; struct __shared_weak_count {} *x2; }*)arg3 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg4 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg5 scale:(float)arg6;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getSpecularTopPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (struct CompressedMeshPipelineSetup { int (**x1)(); struct PipelineDataCReflection {} *x2; struct shared_ptr<ggl::PipelineState> { struct PipelineState {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; struct vector<ggl::ConstantDataElement, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_4_1_1; struct ConstantDataElement {} *x_4_1_2; struct __compressed_pair<ggl::ConstantDataElement *, std::__1::allocator<ggl::ConstantDataElement> > { struct ConstantDataElement {} *x_3_2_1; } x_4_1_3; } x4; struct vector<ggl::Texture *, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_5_1_1; struct Texture {} **x_5_1_2; struct __compressed_pair<ggl::Texture **, std::__1::allocator<ggl::Texture *> > { struct Texture {} **x_3_2_1; } x_5_1_3; } x5; struct Mesh {} *x6; }*)getTopDepthPipelineSetupForGroup:(id)arg1 viewConstantData:(const struct shared_ptr<ggl::ConstantDataTyped<ggl::Tile::View> > { struct ConstantDataTyped<ggl::Tile::View> {} *x1; struct __shared_weak_count {} *x2; }*)arg2 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg3 cameraPosition:(const struct Matrix<float, 3, 1> { float x1[3]; }*)arg4 scale:(float)arg5;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (double)heightAtPoint:(struct Matrix<double, 3, 1> { double x1[3]; })arg1;
- (id)heightCache;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
- (bool)isFogEnabled;
- (id)landmarksModel;
- (unsigned long long)mapLayerPosition;
- (double)maxTileHeightAtPoint:(struct Mercator2<double> { double x1[2]; })arg1;
- (void)removePersistingExitingTiles:(id)arg1;
- (void)reserveStencilRangeForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reset;
- (void)resetPools;
- (void)setActive:(bool)arg1;
- (void)setBuildingChangeoverZ:(float)arg1;
- (void)setBuildingMode:(int)arg1;
- (void)setBuildingMode:(int)arg1 animated:(bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setFadeTiles:(bool)arg1;
- (void)setFogEnabled:(bool)arg1;
- (void)setLandmarksModel:(id)arg1;
- (void)setSkyModel:(id)arg1;
- (void)setStyleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })arg1;
- (id)skyModel;
- (struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; })styleManager;
- (void)stylesheetDidChange;
- (void)updateFadeParametersWithLayoutContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg1;
- (bool)wantsCategorizedSourceTiles;
- (void)willStartDrawingTiles:(id)arg1;
- (void)willStopDrawingTiles:(id)arg1;

@end
