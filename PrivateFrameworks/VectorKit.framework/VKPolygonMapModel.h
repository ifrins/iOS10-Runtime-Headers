/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolygonMapModel : VKVectorMapModel <VKStyleManagerObserver> {
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _aboveBuildingsClearItem;
    int  _aboveBuildingsSourceTileZToStencilOffset;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _aboveRoadsClearItem;
    int  _aboveRoadsSourceTileZToStencilOffset;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonAnimatableFill::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _animatableFillPipelineSetupPool;
    struct shared_ptr<ggl::PolygonAnimatableFill::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _animatableFillPipelineState;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _animatableStrokePipelineSetupPool;
    struct shared_ptr<ggl::PolygonAnimatableStroke::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _animatableStrokePipelineState;
    struct RenderItemBatcher { 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
        struct vector<ggl::Range, std::__1::allocator<ggl::Range> > { 
            struct Range {} *__begin_; 
            struct Range {} *__end_; 
            struct __compressed_pair<ggl::Range *, std::__1::allocator<ggl::Range> > { 
                struct Range {} *__first_; 
            } __end_cap_; 
        } _activeRanges; 
        struct RenderItem {} *_prototype; 
        struct Pool<ggl::RenderItem> { 
            struct set<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *> > { 
                    struct __tree_node<void *, void *> {} *__begin_node_; 
                    struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<void *, void *> > > { 
                        struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                            struct __tree_node_base<void *> {} *__left_; 
                        } __first_; 
                    } __pair1_; 
                    struct __compressed_pair<unsigned long, std::__1::less<void *> > { 
                        unsigned long long __first_; 
                    } __pair3_; 
                } __tree_; 
            } mAllocatedSlabs; 
            unsigned long long mElementsPerSlab; 
            unsigned long long mSlabSize; 
            struct FreeList {} *mFreeElement; 
        } _pool; 
        unsigned long long _rangePoolCount; 
        struct vector<ggl::MultiRange, std::__1::allocator<ggl::MultiRange> > { 
            struct MultiRange {} *__begin_; 
            struct MultiRange {} *__end_; 
            struct __compressed_pair<ggl::MultiRange *, std::__1::allocator<ggl::MultiRange> > { 
                struct MultiRange {} *__first_; 
            } __end_cap_; 
        } _rangePool; 
    }  _batcher;
    struct ClearItem { unsigned char x1; struct Matrix<float, 4, 1> { float x_2_1_1[4]; } x2; bool x3; float x4; unsigned char x5; unsigned int x6; } * _belowRoadsClearItem;
    int  _belowRoadsSourceTileZtoStencilOffset;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _blendedFillPipelineSetupPool;
    struct shared_ptr<ggl::PolygonFill::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _blendedFillPipelineState;
    bool  _buildingsAre3D;
    struct CommandBufferIdSet { 
        struct vector<md::CommandBufferId, std::__1::allocator<md::CommandBufferId> > { 
            unsigned char *__begin_; 
            unsigned char *__end_; 
            struct __compressed_pair<md::CommandBufferId *, std::__1::allocator<md::CommandBufferId> > { 
                unsigned char *__first_; 
            } __end_cap_; 
        } _ids; 
    }  _commandBufferIds;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonFill::CompressedMeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _fillPipelineSetupPool;
    struct shared_ptr<ggl::PolygonFill::CompressedMeshPipelineState> { 
        struct CompressedMeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _fillPipelineState;
    unsigned long long  _mapLayerPosition;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState> > { 
        struct __compressed_pair<ggl::RenderState *, std::__1::default_delete<ggl::RenderState> > { 
            struct RenderState {} *__first_; 
        } __ptr_; 
    }  _polygonRenderStates;
    VKRouteContext * _routeContext;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> > > { 
        struct __compressed_pair<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> *, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> > > { 
            struct FragmentedPool<ggl::PolygonStroke::MeshPipelineSetup> {} *__first_; 
        } __ptr_; 
    }  _strokePipelineSetupPool;
    struct shared_ptr<ggl::PolygonStroke::MeshPipelineState> { 
        struct MeshPipelineState {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _strokePipelineState;
    struct unordered_map<unsigned long long, md::PolygonRouteAttributes, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, md::PolygonRouteAttributes> > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes> > > { 
            struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > > { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> {} **__first_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> > { 
                            unsigned long long __first_; 
                        } __data_; 
                    } __second_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> *> { 
                    struct __hash_node<std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, void *> {} *__next_; 
                } __first_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::hash<unsigned long long>, true> > { 
                unsigned long long __first_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, md::PolygonRouteAttributes>, std::__1::equal_to<unsigned long long>, true> > { 
                float __first_; 
            } __p3_; 
        } __table_; 
    }  _transitNodesRouteAttributesMap;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::AnimatableTexture::Variant> > { 
        struct ConstantDataTyped<ggl::AnimatableTexture::Variant> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _variantData;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long mapLayerPosition;
@property (nonatomic, retain) VKRouteContext *routeContext;
@property (nonatomic, readonly) struct shared_ptr<gss::StylesheetManager<gss::PropertyID> > { struct StylesheetManager<gss::PropertyID> {} *x1; struct __shared_weak_count {} *x2; } styleManager;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; int x26; const void*x27; void*x28; void*x29; long x30; SEL x31; SEL x32; void*x33; const void*x34; void*x35; void*x36; void*x37; in void*x38; void*x39; double x40; void*x41; out out long x42; void*x43; void*x44; void*x45; long x46; SEL x47; SEL x48; void*x49; out long x50; void*x51; void*x52; out in in int x53; void*x54; void*x55; void*x56; void*x57; unsigned int x58/* : ? */; long x59; void*x60; unsigned short x61; void*x62; const out void*x63; void*x64; SEL x65; SEL x66; void*x67; void*x68; short x69; void*x70; void*x71; int x72; void*x73; void*x74; long x75; int x76; in void*x77; unsigned short x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; char *x85; void*x86; void*x87; short x88; void*x89; double x90; SEL x91; SEL x92; void*x93; void*x94; void*x95; SEL x96; SEL x97; double x98; void*x99; float x100; void*x101; void*x102; long x103; void*x104; void*x105; double x106; void*x107; long x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; long x115; SEL x116; SEL x117; void*x118; const void*x119; void*x120; void*x121; void*x122; in void*x123; void*x124; double x125; void*x126; out out long x127; void*x128; void*x129; void*x130; long x131; SEL x132; SEL x133; void*x134; out long x135; void*x136; void*x137; out in in int x138; void*x139; void*x140; void*x141; void*x142; unsigned int x143/* : ? */; long x144; void*x145; unsigned short x146; void*x147; const out void*x148; void*x149; SEL x150; SEL x151; void*x152; void*x153; short x154; void*x155; void*x156; int x157; void*x158; void*x159; long x160; int x161; in void*x162; unsigned short x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; struct  
            struct FragmentedPool<ggl::PolygonAnimatableStroke::MeshPipelineSetup> { {} x174; void*x175; char *x176; void*x177; void*x178; float x179; int x180; const short x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; }*)aboveBuildingsCommanderBuffer:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; SEL x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; short x39; void*x40; int x41; void*x42; in void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void x50; void*x51; out void*x52; int x53; void*x54; double x55; void*x56; char *x57; void*x58; void*x59; void*x60; void*x61; void*x62; char *x63; void*x64; void*x65; void*x66; void*x67; void*x68; void x69; void*x70; out void*x71; int x72; void*x73; double x74; void*x75; char *x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void x88; void*x89; out void*x90; int x91; void*x92; double x93; void*x94; char *x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void x107; void*x108; out void*x109; int x110; void*x111; double x112; void*x113; char *x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void x126; void*x127; out void*x128; int x129; void*x130; double x131; void*x132; char *x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void x145; void*x146; out void*x147; int x148; void*x149; double x150; void*x151; char *x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void x164; void*x165; out void*x166; int x167; void*x168; double x169; void*x170; char *x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void x183; void*x184; out void*x185; int x186; void*x187; double x188; void*x189; char *x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void x202; void*x203; out void*x204; int x205; void*x206; double x207; void*x208; char *x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void x221; void*x222; out void*x223; int x224; void*x225; double x226; void*x227; char *x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void x240; void*x241; out void*x242; int x243; void*x244; double x245; void*x246; char *x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void x259; void*x260; out void*x261; int x262; void*x263; double x264; void*x265; char *x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void x278; void*x279; out void*x280; int x281; void*x282; double x283; void*x284; char *x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void x297; void*x298; out void*x299; int x300; void*x301; double x302; void*x303; char *x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void x316; void*x317; out void*x318; int x319; void*x320; double x321; void*x322; char *x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; int x335; void*x336; in void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; BOOL x352; void*x353; out void*x354; in void*x355; short x356; void*x357; void*x358; void*x359; void*x360; void*x361; void x362; void*x363; out void*x364; int x365; void*x366; double x367; void*x368; char *x369; void*x370; double x371; void*x372; void*x373; void*x374; long long x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; long x387; void*x388; SEL x389; void*x390; SEL x391; void*x392; void*x393; void*x394; void*x395; void*x396; in void*x397; double x398; void*x399; int x400; void*x401; in void*x402; void*x403; void*x404; unsigned long long x405; void*x406; void*x407; void*x408; void*x409; void*x410; const void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; short x418; void*x419; void*x420; void*x421; double x422; void*x423; SEL x424; void*x425; SEL x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; SEL x434; void*x435; SEL x436; void*x437; void*x438; void*x439; long x440; void*x441; long x442; void*x443; out void*x444; BOOL x445; void*x446; void*x447; void*x448; void*x449; void*x450; out void*x451; const void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; long x459; void*x460; SEL x461; void*x462; SEL x463; void*x464; void*x465; void*x466; void*x467; void*x468; in void*x469; double x470; void*x471; int x472; void*x473; in void*x474; void*x475; void*x476; unsigned long long x477; void*x478; void*x479; void*x480; void*x481; void*x482; const void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; struct x494; void*x495; void*x496; void*x497; short x498; void*x499; void*x500; void*x501; const void*x502; void*x503; void*x504; BOOL x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; short x515; void*x516; void*x517; void*x518; long x519; void*x520; int x521; void*x522; void*x523; void*x524; void*x525; void*x526; unsigned int x527/* : ? */; void*x528; void*x529; void*x530; float x531; void*x532; float x533; void*x534; void*x535; void*x536; const void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; long x544; void*x545; SEL x546; void*x547; SEL x548; void*x549; void*x550; void*x551; void*x552; void*x553; in void*x554; double x555; void*x556; int x557; void*x558; in void*x559; void*x560; void*x561; unsigned long long x562; void*x563; void*x564; void*x565; void*x566; void*x567; const void*x568; void*x569; void*x570; void*x571; void*x572; char *x573; void*x574; void*x575; void*x576; void*x577; void*x578; short x579; void*x580; void*x581; void*x582; double x583; void*x584; SEL x585; void*x586; SEL x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; SEL x595; void*x596; SEL x597; void*x598; void*x599; void*x600; long x601; void*x602; long x603; void*x604; out void*x605; BOOL x606; void*x607; void*x608; void*x609; void*x610; void*x611; out void*x612; const void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; long x620; void*x621; SEL x622; void*x623; SEL x624; void*x625; void*x626; void*x627; void*x628; void*x629; in void*x630; double x631; void*x632; int x633; void*x634; in void*x635; void*x636; void*x637; unsigned long long x638; void*x639; void*x640; void*x641; void*x642; void*x643; const void*x644; void*x645; void*x646; void*x647; void*x648; char *x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; struct x659; void*x660; void*x661; void*x662; short x663; void*x664; void*x665; void*x666; const void*x667; void*x668; void*x669; BOOL x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; in void*x680; double x681; void*x682; int x683; void*x684; in void*x685; void*x686; void*x687; unsigned long long x688; void*x689; void*x690; void*x691; void*x692; void*x693; const void*x694; void*x695; void*x696; void*x697; void*x698; struct x699; void*x700; }*)aboveRoadsCommanderBuffer:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (struct CommandBuffer { int (**x1)(); char *x2; unsigned char x3; struct RenderQueue {} *x4; struct ClearItem {} *x5; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_6_1_1; struct RenderItem {} **x_6_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_7_1_1; struct Texture2DLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_8_1_1; struct BufferLoadItem {} *x_8_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_8_1_3; } x8; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned long long x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long long x_3_2_1; } x_9_1_3; } x9; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_10_1_1; unsigned long long x_10_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long long x_3_2_1; } x_10_1_3; } x10; id x11; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; const void*x24; void*x25; void*x26; void*x27; void*x28; out SEL x29; SEL x30; void*x31; const void*x32; void*x33; void*x34; int x35; in void*x36; void*x37; void*x38; const void*x39; void*x40; void*x41; bycopy void*x42; void*x43; void*x44; void*x45; void*x46; const void*x47; void*x48; char *x49; void*x50; void*x51; void*x52; void*x53; out SEL x54; SEL x55; void*x56; const void*x57; void*x58; void*x59; int x60; in void*x61; void*x62; void*x63; bycopy void*x64; void*x65; void*x66; void*x67; void*x68; const void*x69; void*x70; void*x71; void*x72; void*x73; out SEL x74; SEL x75; void*x76; const void*x77; long x78; void*x79; void*x80; short x81; void*x82; void*x83; void*x84; void*x85; bycopy void*x86; void*x87; void*x88; void*x89; void*x90; const void*x91; void*x92; void*x93; void*x94; void*x95; out SEL x96; SEL x97; void*x98; void*x99; void*x100; short x101; void*x102; void*x103; void*x104; void*x105; const void*x106; void*x107; void*x108; void*x109; out SEL x110; SEL x111; void*x112; void*x113; long long x114; void*x115; void*x116; long x117; void*x118; void*x119; void*x120; const void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; short x130; void*x131; double x132; SEL x133; SEL x134; void*x135; void*x136; void*x137; SEL x138; SEL x139; void*x140; long x141; long x142; out BOOL x143; void*x144; void*x145; out const void*x146; void*x147; void*x148; out SEL x149; SEL x150; float x151; void*x152; short x153; void*x154; void*x155; short x156; void*x157; void*x158; const void*x159; double x160; void*x161; void*x162; void*x163; const void*x164; void*x165; double x166; SEL x167; SEL x168; unsigned long x169; void*x170; unsigned int x171/* : ? */; void*x172; long x173; void*x174; void*x175; void*x176; void*x177; void*x178; const void*x179; void*x180; void*x181; void*x182; in void*x183; void*x184; void*x185; double x186; SEL x187; SEL x188; void*x189; out int x190; in void*x191; unsigned long x192; void*x193; unsigned int x194/* : ? */; void*x195; long x196; void*x197; void*x198; void*x199; void*x200; void*x201; const void*x202; void*x203; void*x204; void*x205; void*x206; bycopy void*x207; void*x208; void*x209; void*x210; void*x211; const void*x212; void*x213; void*x214; void*x215; void*x216; out SEL x217; SEL x218; void*x219; const void*x220; void*x221; void*x222; int x223; in void*x224; void*x225; void*x226; const void*x227; void*x228; void*x229; bycopy void*x230; void*x231; void*x232; void*x233; void*x234; const void*x235; void*x236; char *x237; void*x238; void*x239; void*x240; void*x241; out SEL x242; SEL x243; void*x244; const void*x245; void*x246; void*x247; int x248; in void*x249; void*x250; void*x251; bycopy void*x252; void*x253; void*x254; void*x255; void*x256; const void*x257; void*x258; void*x259; void*x260; void*x261; out SEL x262; SEL x263; void*x264; const void*x265; long x266; void*x267; void*x268; short x269; void*x270; void*x271; void*x272; void*x273; bycopy void*x274; void*x275; void*x276; void*x277; void*x278; const void*x279; void*x280; void*x281; void*x282; void*x283; out SEL x284; SEL x285; void*x286; void*x287; void*x288; short x289; void*x290; void*x291; void*x292; void*x293; const void*x294; void*x295; void*x296; void*x297; out SEL x298; SEL x299; void*x300; void*x301; long long x302; void*x303; void*x304; long x305; void*x306; void*x307; void*x308; const void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; struct x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; short x331; void*x332; void*x333; const void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; SEL x344; unsigned long x345; void*x346; unsigned int x347/* : ? */; void*x348; long x349; void*x350; void*x351; void*x352; void*x353; void*x354; const void*x355; void*x356; void*x357; void*x358; in void*x359; void*x360; void*x361; double x362; SEL x363; SEL x364; void*x365; out int x366; in void*x367; unsigned long x368; void*x369; unsigned int x370/* : ? */; void*x371; long x372; void*x373; void*x374; void*x375; void*x376; void*x377; const void*x378; void*x379; void*x380; void*x381; void*x382; bycopy void*x383; void*x384; void*x385; void*x386; void*x387; const void*x388; void*x389; void*x390; void*x391; void*x392; out SEL x393; SEL x394; void*x395; const void*x396; void*x397; void*x398; int x399; in void*x400; void*x401; void*x402; const void*x403; void*x404; void*x405; bycopy void*x406; void*x407; void*x408; void*x409; void*x410; const void*x411; void*x412; char *x413; void*x414; void*x415; void*x416; void*x417; out SEL x418; SEL x419; void*x420; const void*x421; void*x422; void*x423; int x424; in void*x425; void*x426; void*x427; bycopy void*x428; void*x429; void*x430; void*x431; void*x432; const void*x433; void*x434; void*x435; void*x436; void*x437; out SEL x438; SEL x439; void*x440; const void*x441; long x442; void*x443; void*x444; short x445; void*x446; void*x447; void*x448; void*x449; bycopy void*x450; void*x451; void*x452; void*x453; void*x454; const void*x455; void*x456; void*x457; void*x458; void*x459; out SEL x460; SEL x461; void*x462; void*x463; void*x464; short x465; void*x466; void*x467; void*x468; void*x469; const void*x470; void*x471; void*x472; void*x473; out SEL x474; SEL x475; void*x476; void*x477; long long x478; void*x479; void*x480; long x481; void*x482; void*x483; void*x484; const void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void x492; out int x493; double x494; void*x495; char *x496; void*x497; void*x498; struct  {} x499; void*x500; char *x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; short x511; void*x512; const void*x513; BOOL x514; void*x515; void*x516; void*x517; void*x518; BOOL x519; out void*x520; void*x521; const void*x522; short x523; short x524; void*x525; double x526; void*x527; void*x528; void*x529; int x530; const void*x531; short x532; void*x533; double x534; SEL x535; SEL x536; void*x537; void*x538; void*x539; SEL x540; SEL x541; void*x542; void*x543; void*x544; const void*x545; void*x546; void*x547; void*x548; in double x549; void*x550; in out double x551; void*x552; void*x553; short x554; void*x555; double x556; SEL x557; SEL x558; void*x559; void*x560; void*x561; SEL x562; SEL x563; void*x564; void*x565; void*x566; const void*x567; void*x568; void*x569; in out double x570; void*x571; void*x572; unsigned int x573/* : ? */; void*x574; short x575; void*x576; void*x577; void x578; out int x579; double x580; void*x581; char *x582; void*x583; void*x584; char *x585; void*x586; void*x587; void*x588; short x589; void*x590; double x591; SEL x592; SEL x593; void*x594; void*x595; void*x596; SEL x597; SEL x598; void*x599; long x600; long x601; out BOOL x602; void*x603; void*x604; out const void*x605; short x606; void*x607; double x608; SEL x609; SEL x610; void*x611; void*x612; void*x613; SEL x614; SEL x615; void*x616; void*x617; void*x618; const void*x619; void*x620; void*x621; in out double x622; void*x623; void*x624; void*x625; void*x626; out SEL x627; SEL x628; float x629; void*x630; short x631; void*x632; void*x633; short x634; void*x635; void*x636; const void*x637; double x638; void*x639; void*x640; void*x641; const void*x642; void*x643; double x644; SEL x645; SEL x646; unsigned long x647; void*x648; unsigned int x649/* : ? */; void*x650; long x651; void*x652; void*x653; void*x654; void*x655; void*x656; const void*x657; void*x658; void*x659; void*x660; in void*x661; void*x662; void*x663; double x664; SEL x665; SEL x666; void*x667; out int x668; in void*x669; unsigned long x670; void*x671; unsigned int x672/* : ? */; void*x673; long x674; void*x675; void*x676; void*x677; void*x678; void*x679; const void*x680; void*x681; void*x682; void*x683; void*x684; bycopy void*x685; void*x686; void*x687; void*x688; void*x689; const void*x690; void*x691; void*x692; void*x693; void*x694; out SEL x695; SEL x696; void*x697; const void*x698; void*x699; void*x700; int x701; in void*x702; void*x703; void*x704; const void*x705; void*x706; void*x707; bycopy void*x708; void*x709; void*x710; void*x711; void*x712; const void*x713; void*x714; char *x715; void*x716; void*x717; void*x718; void*x719; out SEL x720; SEL x721; void*x722; const void*x723; void*x724; void*x725; int x726; in void*x727; void*x728; void*x729; bycopy void*x730; void*x731; void*x732; void*x733; void*x734; const void*x735; void*x736; void*x737; void*x738; void*x739; out SEL x740; SEL x741; void*x742; const void*x743; long x744; void*x745; void*x746; short x747; void*x748; void*x749; void*x750; void*x751; bycopy void*x752; void*x753; void*x754; void*x755; void*x756; const void*x757; void*x758; void*x759; unsigned char x760; void*x761; out void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; in void*x769; double x770; void*x771; bool x772; void*x773; void*x774; void*x775; float x776; void*x777; float x778; void*x779; void*x780; void*x781; const void*x782; void*x783; void*x784; struct x785; void*x786; void*x787; void*x788; int x789; void*x790; in void*x791; void*x792; void*x793; void*x794; void*x795; union x796; void*x797; char *x798; void*x799; char *x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; union x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; BOOL x816; void*x817; void*x818; void*x819; void*x820; void*x821; const void*x822; void*x823; void*x824; char *x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; in void*x837; short x838; void*x839; int x840; void*x841; void*x842; void*x843; in void*x844; void*x845; void*x846; double x847; void*x848; void*x849; void*x850; BOOL x851; void*x852; void*x853; void*x854; void*x855; void*x856; const void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; short x868; void*x869; void*x870; void*x871; const void*x872; void*x873; void*x874; BOOL x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; in void*x885; double x886; void*x887; void*x888; void*x889; const void*x890; unsigned long long x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; struct x903; void*x904; }*)belowRoadsCommanderBuffer:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg1;
- (void)buildingsDidBecome3D:(bool)arg1;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(bool)arg1;
- (struct shared_ptr<md::FeatureMarker> { struct FeatureMarker {} *x1; struct __shared_weak_count {} *x2; })featureMarkerInTile:(id)arg1 atPoint:(struct Matrix<double, 3, 1> { double x1[3]; }*)arg2;
- (void)flushPools;
- (void)generateRenderItemsForOpaquePolygonsInScene:(id)arg1 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)generateRenderItemsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)generateRenderItemsForTransparentPolygonsInScene:(id)arg1 context:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2 commandBufferIdSet:(struct CommandBufferIdSet { struct vector<md::CommandBufferId, std::__1::allocator<md::CommandBufferId> > { unsigned char *x_1_1_1; unsigned char *x_1_1_2; struct __compressed_pair<md::CommandBufferId *, std::__1::allocator<md::CommandBufferId> > { unsigned char *x_3_2_1; } x_1_1_3; } x1; })arg3;
- (unsigned long long)mapLayerPosition;
- (struct RenderState { int (**x1)(); char *x2; int (**x3)(); struct ResourceManager {} *x4; struct RenderResource {} *x5; struct DepthState { int x_6_1_1; int x_6_1_2; int x_6_1_3; float x_6_1_4; float x_6_1_5; } x6; struct StencilState { int x_7_1_1; int x_7_1_2; int x_7_1_3; int x_7_1_4; int x_7_1_5; unsigned int x_7_1_6; unsigned int x_7_1_7; unsigned int x_7_1_8; } x7; struct RasterizerState { int x_8_1_1; int x_8_1_2; unsigned int x_8_1_3; struct Box<unsigned int, 2> { struct Matrix<unsigned int, 2, 1> { unsigned int x_1_3_1[2]; } x_4_2_1; struct Matrix<unsigned int, 2, 1> { unsigned int x_2_3_1[2]; } x_4_2_2; } x_8_1_4; } x8; bool x9; }*)renderStateForFilling:(bool)arg1 usingStencilType:(unsigned char)arg2 blendingEnabled:(bool)arg3 depthTestingEnabled:(bool)arg4;
- (void)reserveStencilRangeAboveBuildingsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reserveStencilRangeAboveRoadsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reserveStencilRangeBelowRoadsForScene:(id)arg1 withContext:(struct LayoutContext { id x1; short x2; /* Warning: Unrecognized filer type: 'h' using 'void*' */ void*x3; void*x4; const void*x5; double x6; void*x7; void*x8; void*x9; const void*x10; void*x11; double x12; SEL x13; SEL x14; oneway int x15; void*x16; void*x17; void*x18; const void*x19; in short x20; float x21; out const void*x22; void*x23; void*x24; struct ViewTransform {} *x25; struct __shared_weak_count {} *x26; }*)arg2 renderQueue:(struct RenderQueue { int (**x1)(); struct shared_ptr<ggl::RenderQueue> { struct RenderQueue {} *x_2_1_1; struct __shared_weak_count {} *x_2_1_2; } x2; }*)arg3;
- (void)reset;
- (void)resetPools;
- (id)routeContext;
- (void)setMapLayerPosition:(unsigned long long)arg1;
- (void)setRouteContext:(id)arg1;
- (void)stylesheetDidChange;
- (void)stylesheetDoneChanging;
- (void)stylesheetTransitionDidProgress;
- (void)stylesheetWillChange;
- (unsigned long long)textureSize;
- (void)updateStylesInTiles:(id)arg1 updateTextures:(bool)arg2;
- (bool)wantsCategorizedSourceTiles;
- (void)willStartDrawingTiles:(id)arg1;
- (struct Matrix<float, 4, 4> { float x1[16]; })worldTransformForPolygonGroup:(id)arg1 atZoom:(float)arg2;

@end
